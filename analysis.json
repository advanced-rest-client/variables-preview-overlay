{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "An element to display quick preview of variables values for current\nenvironment.\n\nThe element works with\n[variables-manager](https://github.com/advanced-rest-client/variables-manager/)\nthat provides the events API to get information about environemnts and variables.\nIt also requires `advanced-rest-client/arc-models/variables-model` as an\naccess to the data store.\n\nThe element renders an overlay controlled by `Polymer.IronOverlayBehavior`\nwith list of variables associated with current environment.\n\nIt listens for `variables-list-changed` custom event dispatched by the\n`variables-manager`.\nIf the event cannot be send by the application then set `variables` and\n`environemnt` properties to the corresponding values.\n\n### Example\n\n```html\n<variables-preview-overlay id=\"overlay\"></variables-preview-overlay>\n```\n```javascript\ndocument.getElementById('overlay').positionTarget = target; // HTML element\n```\n\n### Styling\n\n`<variables-preview-overlay>` provides the following custom properties and\nmixins for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--variables-preview-overlay` | Mixin applied to the element | `{}`\n`--variables-preview-overlay-background-color` | Background color of the oberlay | `inherit`\n`--variables-preview-overlay-dialog-color` | Overlay foreground color | `--primary-text-color`\n`--variables-preview-overlay-title` | Mixin applied to the title element | `{}`",
      "summary": "",
      "path": "variables-preview-overlay.html",
      "properties": [
        {
          "name": "environment",
          "type": "string | null | undefined",
          "description": "Currently activated environment.",
          "privacy": "public",
          "sourceRange": {
            "file": "../variables-consumer-mixin/variables-consumer-mixin.html",
            "start": {
              "line": 44,
              "column": 8
            },
            "end": {
              "line": 47,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "ArcComponents.VariablesConsumerMixin"
        },
        {
          "name": "environments",
          "type": "Array.<Object>",
          "description": "List of all available environments.",
          "privacy": "public",
          "sourceRange": {
            "file": "../variables-consumer-mixin/variables-consumer-mixin.html",
            "start": {
              "line": 52,
              "column": 8
            },
            "end": {
              "line": 52,
              "column": 49
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Array"
            }
          },
          "inheritedFrom": "ArcComponents.VariablesConsumerMixin"
        },
        {
          "name": "variables",
          "type": "Array.<Object>",
          "description": "List of available variables for the environment.",
          "privacy": "public",
          "sourceRange": {
            "file": "../variables-consumer-mixin/variables-consumer-mixin.html",
            "start": {
              "line": 57,
              "column": 8
            },
            "end": {
              "line": 57,
              "column": 46
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Array"
            }
          },
          "inheritedFrom": "ArcComponents.VariablesConsumerMixin"
        },
        {
          "name": "hasVariables",
          "type": "boolean | null | undefined",
          "description": "Computed value, true if variables are available for current\nenvironment.",
          "privacy": "public",
          "sourceRange": {
            "file": "../variables-consumer-mixin/variables-consumer-mixin.html",
            "start": {
              "line": 62,
              "column": 8
            },
            "end": {
              "line": 67,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "ArcComponents.VariablesConsumerMixin"
        },
        {
          "name": "hasEnvironments",
          "type": "boolean | null | undefined",
          "description": "Computed value, true if there's a list of environments set.",
          "privacy": "public",
          "sourceRange": {
            "file": "../variables-consumer-mixin/variables-consumer-mixin.html",
            "start": {
              "line": 71,
              "column": 8
            },
            "end": {
              "line": 76,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "ArcComponents.VariablesConsumerMixin"
        },
        {
          "name": "appVariables",
          "type": "Array.<Object>",
          "description": "List of application variables (stored in the data store + in memory)",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 193,
              "column": 8
            },
            "end": {
              "line": 195,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "systemVariables",
          "type": "Array.<Object>",
          "description": "List of system variables to display.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 200,
              "column": 8
            },
            "end": {
              "line": 202,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "hasAppVariables",
          "type": "boolean | null | undefined",
          "description": "Computed value, true if the element has application variables",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 206,
              "column": 8
            },
            "end": {
              "line": 210,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "hasSysVariables",
          "type": "boolean | null | undefined",
          "description": "Computed value, true if the element has system variables",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 214,
              "column": 8
            },
            "end": {
              "line": 218,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../variables-consumer-mixin/variables-consumer-mixin.html",
            "start": {
              "line": 90,
              "column": 4
            },
            "end": {
              "line": 101,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcComponents.VariablesConsumerMixin"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../variables-consumer-mixin/variables-consumer-mixin.html",
            "start": {
              "line": 103,
              "column": 4
            },
            "end": {
              "line": 111,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcComponents.VariablesConsumerMixin"
        },
        {
          "name": "_initializeVariables",
          "description": "Asks variables manager for current environment and variables.\n\nNote, At the moment of initialization the manager may not be in the DOM.\nIn this case the initialization fails. However, when the manager is\ninitialized it dispatched events to update variables and environments.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../variables-consumer-mixin/variables-consumer-mixin.html",
            "start": {
              "line": 119,
              "column": 4
            },
            "end": {
              "line": 124,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcComponents.VariablesConsumerMixin"
        },
        {
          "name": "refreshState",
          "description": "Refreshes list of variables and current environment.",
          "privacy": "public",
          "sourceRange": {
            "file": "../variables-consumer-mixin/variables-consumer-mixin.html",
            "start": {
              "line": 130,
              "column": 4
            },
            "end": {
              "line": 150,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "noThrows",
              "type": "Boolean",
              "description": "When set it does not throw error when model is\nnot found."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcComponents.VariablesConsumerMixin"
        },
        {
          "name": "refreshEnvironments",
          "description": "Refreshes list of environments.",
          "privacy": "public",
          "sourceRange": {
            "file": "../variables-consumer-mixin/variables-consumer-mixin.html",
            "start": {
              "line": 155,
              "column": 4
            },
            "end": {
              "line": 182,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Promise"
          },
          "inheritedFrom": "ArcComponents.VariablesConsumerMixin"
        },
        {
          "name": "_computeHasVariables",
          "description": "Computes `hasVariables` property.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../variables-consumer-mixin/variables-consumer-mixin.html",
            "start": {
              "line": 189,
              "column": 4
            },
            "end": {
              "line": 191,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "length",
              "type": "Number"
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "True if list is not empty."
          },
          "inheritedFrom": "ArcComponents.VariablesConsumerMixin"
        },
        {
          "name": "_computeHasEnvs",
          "description": "Computes `hasEnvironments` property.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../variables-consumer-mixin/variables-consumer-mixin.html",
            "start": {
              "line": 197,
              "column": 4
            },
            "end": {
              "line": 199,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "length",
              "type": "Number"
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "True if list is not empty."
          },
          "inheritedFrom": "ArcComponents.VariablesConsumerMixin"
        },
        {
          "name": "_envChangedHandler",
          "description": "Removes variables and updates environment.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../variables-consumer-mixin/variables-consumer-mixin.html",
            "start": {
              "line": 204,
              "column": 4
            },
            "end": {
              "line": 208,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "CustomEvent"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcComponents.VariablesConsumerMixin"
        },
        {
          "name": "_varListChangedHandler",
          "description": "Handler for the `variables-list-changed` event.\nSets list of the variables.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../variables-consumer-mixin/variables-consumer-mixin.html",
            "start": {
              "line": 215,
              "column": 4
            },
            "end": {
              "line": 225,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "CustomEvent"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcComponents.VariablesConsumerMixin"
        },
        {
          "name": "_varUpdateHandler",
          "description": "Handler for `variable-updated` event. Updates variable in the list\nif it is on it or adds it otherwise.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../variables-consumer-mixin/variables-consumer-mixin.html",
            "start": {
              "line": 231,
              "column": 4
            },
            "end": {
              "line": 251,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "CustomEvent"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcComponents.VariablesConsumerMixin"
        },
        {
          "name": "_varDeleteHandler",
          "description": "Handler for `variable-deleted` event. Removes variable from the list\nif it is on it.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../variables-consumer-mixin/variables-consumer-mixin.html",
            "start": {
              "line": 257,
              "column": 4
            },
            "end": {
              "line": 267,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "CustomEvent"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcComponents.VariablesConsumerMixin"
        },
        {
          "name": "_getVariableIndex",
          "description": "Finds variable index on the variables list.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../variables-consumer-mixin/variables-consumer-mixin.html",
            "start": {
              "line": 273,
              "column": 4
            },
            "end": {
              "line": 279,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "id",
              "type": "String",
              "description": "PouchDB data id"
            }
          ],
          "return": {
            "type": "Number",
            "desc": "Variable index or -1."
          },
          "inheritedFrom": "ArcComponents.VariablesConsumerMixin"
        },
        {
          "name": "_envDeleteHandler",
          "description": "Handler for non-cancelable `environment-deleted` event.\nRemoves environment if it exists on the list.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../variables-consumer-mixin/variables-consumer-mixin.html",
            "start": {
              "line": 285,
              "column": 4
            },
            "end": {
              "line": 298,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "CustomEvent"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcComponents.VariablesConsumerMixin"
        },
        {
          "name": "_envUpdateHandler",
          "description": "Handler for non-cancelable `environment-updated` event.\nUpdates / adds environment to the list.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../variables-consumer-mixin/variables-consumer-mixin.html",
            "start": {
              "line": 304,
              "column": 4
            },
            "end": {
              "line": 321,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "CustomEvent"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcComponents.VariablesConsumerMixin"
        },
        {
          "name": "_computeVarsData",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 228,
              "column": 4
            },
            "end": {
              "line": 244,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "record"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_varSort",
          "description": "Sort function for dom-repeat for vars",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 252,
              "column": 4
            },
            "end": {
              "line": 260,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "a",
              "type": "Object"
            },
            {
              "name": "b",
              "type": "Object"
            }
          ],
          "return": {
            "type": "Number"
          }
        },
        {
          "name": "_computeHasVars",
          "description": "Computes value for `has*Variables` properties.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 266,
              "column": 4
            },
            "end": {
              "line": 268,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "record",
              "type": "Object",
              "description": "Polymer's change record"
            }
          ],
          "return": {
            "type": "Boolean"
          }
        },
        {
          "name": "_computeAppVars",
          "description": "Creates a list of application variables only (application + in mem vars)",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 274,
              "column": 4
            },
            "end": {
              "line": 287,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "record",
              "type": "Object",
              "description": "Polymer's change record"
            }
          ],
          "return": {
            "type": "Array.<Object>",
            "desc": "A list with filtered out system variables"
          }
        },
        {
          "name": "_computeSysVars",
          "description": "Creates a list of system variables.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 293,
              "column": 4
            },
            "end": {
              "line": 306,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "record",
              "type": "Object",
              "description": "Polymer's change record"
            }
          ],
          "return": {
            "type": "Array.<Object>",
            "desc": "A list with system variables only."
          }
        },
        {
          "name": "_fireEdit",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 308,
              "column": 4
            },
            "end": {
              "line": 314,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 183,
          "column": 2
        },
        "end": {
          "line": 320,
          "column": 3
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "UiElements.VariablesPreviewOverlay",
      "attributes": [
        {
          "name": "environment",
          "description": "Currently activated environment.",
          "sourceRange": {
            "file": "../variables-consumer-mixin/variables-consumer-mixin.html",
            "start": {
              "line": 44,
              "column": 8
            },
            "end": {
              "line": 47,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "ArcComponents.VariablesConsumerMixin"
        },
        {
          "name": "environments",
          "description": "List of all available environments.",
          "sourceRange": {
            "file": "../variables-consumer-mixin/variables-consumer-mixin.html",
            "start": {
              "line": 52,
              "column": 8
            },
            "end": {
              "line": 52,
              "column": 49
            }
          },
          "metadata": {},
          "type": "Array.<Object>",
          "inheritedFrom": "ArcComponents.VariablesConsumerMixin"
        },
        {
          "name": "variables",
          "description": "List of available variables for the environment.",
          "sourceRange": {
            "file": "../variables-consumer-mixin/variables-consumer-mixin.html",
            "start": {
              "line": 57,
              "column": 8
            },
            "end": {
              "line": 57,
              "column": 46
            }
          },
          "metadata": {},
          "type": "Array.<Object>",
          "inheritedFrom": "ArcComponents.VariablesConsumerMixin"
        },
        {
          "name": "has-variables",
          "description": "Computed value, true if variables are available for current\nenvironment.",
          "sourceRange": {
            "file": "../variables-consumer-mixin/variables-consumer-mixin.html",
            "start": {
              "line": 62,
              "column": 8
            },
            "end": {
              "line": 67,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "ArcComponents.VariablesConsumerMixin"
        },
        {
          "name": "has-environments",
          "description": "Computed value, true if there's a list of environments set.",
          "sourceRange": {
            "file": "../variables-consumer-mixin/variables-consumer-mixin.html",
            "start": {
              "line": 71,
              "column": 8
            },
            "end": {
              "line": 76,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "ArcComponents.VariablesConsumerMixin"
        },
        {
          "name": "app-variables",
          "description": "List of application variables (stored in the data store + in memory)",
          "sourceRange": {
            "start": {
              "line": 193,
              "column": 8
            },
            "end": {
              "line": 195,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Array.<Object>"
        },
        {
          "name": "system-variables",
          "description": "List of system variables to display.",
          "sourceRange": {
            "start": {
              "line": 200,
              "column": 8
            },
            "end": {
              "line": 202,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Array.<Object>"
        },
        {
          "name": "has-app-variables",
          "description": "Computed value, true if the element has application variables",
          "sourceRange": {
            "start": {
              "line": 206,
              "column": 8
            },
            "end": {
              "line": 210,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "has-sys-variables",
          "description": "Computed value, true if the element has system variables",
          "sourceRange": {
            "start": {
              "line": 214,
              "column": 8
            },
            "end": {
              "line": 218,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "open-variables-editor",
          "description": "Fired when the user requested to edit variables for selected environemnt.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "variables-preview-overlay",
      "mixins": [
        "Polymer.IronOverlayBehavior",
        "ArcComponents.VariablesConsumerMixin"
      ]
    }
  ]
}
