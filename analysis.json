{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "An element to display quick preview of variables values for current\nenvironment.\n\nThe element works with\n[variables-manager](https://github.com/advanced-rest-client/variables-manager/)\nthat provides the events API to get information about environemnts and variables.\nIt also requires `advanced-rest-client/arc-models/variables-model` as an\naccess to the data store.\n\nThe element renders an overlay controlled by `Polymer.IronOverlayBehavior`\nwith list of variables associated with current environment.\n\nIt listens for `variables-list-changed` custom event dispatched by the\n`variables-manager`.\nIf the event cannot be send by the application then set `variables` and\n`environemnt` properties to the corresponding values.\n\n### Example\n\n```html\n<variables-preview-overlay id=\"overlay\"></variables-preview-overlay>\n```\n```javascript\ndocument.getElementById('overlay').positionTarget = target; // HTML element\n```\n\n### Styling\n\n`<variables-preview-overlay>` provides the following custom properties and\nmixins for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--variables-preview-overlay` | Mixin applied to the element | `{}`\n`--variables-preview-overlay-background-color` | Background color of the oberlay | `inherit`\n`--variables-preview-overlay-dialog-color` | Overlay foreground color | `--primary-text-color`\n`--variables-preview-overlay-title` | Mixin applied to the title element | `{}`\n`--variables-preview-overlay-var-name-color` | Color of a variable name label | `rgba(0, 0, 0, .54)`\n`--variables-preview-overlay-var-value-color` | Color of a variable value label | `rgba(0, 0, 0, .87)`",
      "summary": "",
      "path": "variables-preview-overlay.js",
      "properties": [
        {
          "name": "appVariables",
          "type": "Array.<Object>",
          "description": "List of application variables (stored in the data store + in memory)",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 244,
              "column": 6
            },
            "end": {
              "line": 244,
              "column": 25
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "systemVariables",
          "type": "Array.<Object>",
          "description": "List of system variables to display.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 249,
              "column": 6
            },
            "end": {
              "line": 249,
              "column": 28
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "hasAppVariables",
          "type": "boolean | null | undefined",
          "description": "Computed value, true if the element has application variables",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 253,
              "column": 6
            },
            "end": {
              "line": 257,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "hasSysVariables",
          "type": "boolean | null | undefined",
          "description": "Computed value, true if the element has system variables",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 261,
              "column": 6
            },
            "end": {
              "line": 265,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "maskedValues",
          "type": "boolean | null | undefined",
          "description": "When set it renders values masked under non-meaningful character",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 269,
              "column": 6
            },
            "end": {
              "line": 269,
              "column": 27
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_computeVarsData",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 279,
              "column": 2
            },
            "end": {
              "line": 295,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "record"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_varSort",
          "description": "Sort function for dom-repeat for vars",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 303,
              "column": 2
            },
            "end": {
              "line": 311,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "a",
              "type": "Object"
            },
            {
              "name": "b",
              "type": "Object"
            }
          ],
          "return": {
            "type": "Number"
          }
        },
        {
          "name": "_computeHasVars",
          "description": "Computes value for `has*Variables` properties.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 317,
              "column": 2
            },
            "end": {
              "line": 319,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "record",
              "type": "Object",
              "description": "Polymer's change record"
            }
          ],
          "return": {
            "type": "Boolean"
          }
        },
        {
          "name": "_computeAppVars",
          "description": "Creates a list of application variables only (application + in mem vars)",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 325,
              "column": 2
            },
            "end": {
              "line": 338,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "record",
              "type": "Object",
              "description": "Polymer's change record"
            }
          ],
          "return": {
            "type": "Array.<Object>",
            "desc": "A list with filtered out system variables"
          }
        },
        {
          "name": "_computeSysVars",
          "description": "Creates a list of system variables.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 344,
              "column": 2
            },
            "end": {
              "line": 357,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "record",
              "type": "Object",
              "description": "Polymer's change record"
            }
          ],
          "return": {
            "type": "Array.<Object>",
            "desc": "A list with system variables only."
          }
        },
        {
          "name": "_fireEdit",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 359,
              "column": 2
            },
            "end": {
              "line": 365,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_computeValueLabel",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 367,
              "column": 2
            },
            "end": {
              "line": 377,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            },
            {
              "name": "maskedValues"
            }
          ]
        },
        {
          "name": "_toggleValues",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 379,
              "column": 2
            },
            "end": {
              "line": 381,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 67,
          "column": 0
        },
        "end": {
          "line": 387,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "UiElements.VariablesPreviewOverlay",
      "attributes": [
        {
          "name": "app-variables",
          "description": "List of application variables (stored in the data store + in memory)",
          "sourceRange": {
            "start": {
              "line": 244,
              "column": 6
            },
            "end": {
              "line": 244,
              "column": 25
            }
          },
          "metadata": {},
          "type": "Array.<Object>"
        },
        {
          "name": "system-variables",
          "description": "List of system variables to display.",
          "sourceRange": {
            "start": {
              "line": 249,
              "column": 6
            },
            "end": {
              "line": 249,
              "column": 28
            }
          },
          "metadata": {},
          "type": "Array.<Object>"
        },
        {
          "name": "has-app-variables",
          "description": "Computed value, true if the element has application variables",
          "sourceRange": {
            "start": {
              "line": 253,
              "column": 6
            },
            "end": {
              "line": 257,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "has-sys-variables",
          "description": "Computed value, true if the element has system variables",
          "sourceRange": {
            "start": {
              "line": 261,
              "column": 6
            },
            "end": {
              "line": 265,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "masked-values",
          "description": "When set it renders values masked under non-meaningful character",
          "sourceRange": {
            "start": {
              "line": 269,
              "column": 6
            },
            "end": {
              "line": 269,
              "column": 27
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "open-variables-editor",
          "description": "Fired when the user requested to edit variables for selected environemnt.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "variables-preview-overlay",
      "mixins": [
        "VariablesConsumerMixin"
      ]
    }
  ]
}
